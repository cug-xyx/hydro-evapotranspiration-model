d
d %>%
mutate(yr = year(date))
d %>%
mutate(yr = year(date)) %>%
ggplot(aes(x = date, y = ET_CR)) +
geom_point() +
facet_wrap(~yr)
d %>%
mutate(yr = year(date)) %>%
ggplot(aes(x = date, y = ET_CR)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free')
d %>%
mutate(yr = year(date)) %>%
filter(ET_CR >= 50) %>%
ggplot(aes(x = date, y = ET_CR)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free')
d %>%
mutate(yr = year(date)) %>%
filter(ET_CR < 50) %>%
ggplot(aes(x = date, y = ET_CR)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free')
d %>%
mutate(yr = year(date)) %>%
filter(ET_CR < 50) %>%
ggplot(aes(x = date, y = ET_CR)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free') +
theme(
legend.position = 'top',
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
d
d %>%
mutate(yr = year(date)) %>%
filter(ET_CR < 50) %>%
ggplot(aes(x = date, y = Twb)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free') +
theme(
legend.position = 'top',
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
d %>%
mutate(yr = year(date)) %>%
filter(ET_CR < 50) %>%
ggplot(aes(x = date, y = Tdry)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free') +
theme(
legend.position = 'top',
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
d %>%
mutate(yr = year(date)) %>%
filter(ET_CR < 50) %>%
ggplot(aes(x = date, y = Tw)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free') +
theme(
legend.position = 'top',
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
d %>%
mutate(yr = year(date)) %>%
filter(ET_CR < 50) %>%
ggplot(aes(x = date, y = Epmax)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free') +
theme(
legend.position = 'top',
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
d %>%
mutate(yr = year(date)) %>%
filter(ET_CR < 50) %>%
ggplot(aes(x = date, y = Ep)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free') +
theme(
legend.position = 'top',
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
d %>%
mutate(yr = year(date)) %>%
filter(ET_CR < 50) %>%
ggplot(aes(x = date, y = Ew)) +
geom_point(aes(color = TAG)) +
facet_wrap(~yr, scales = 'free') +
theme(
legend.position = 'top',
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
1
1
fread('H:/data for cal_PET/SITES_CFSV2/59287.csv')
library(tidyverse)
library(tidyfst)
fread('H:/data for cal_PET/SITES_CFSV2/59287.csv')
fread('H:/data for cal_PET/SITES_CFSV2/59287.csv') %>%
mutate(VPD = cal_VPD(Ta = Tavg, Pa = Pa, q = q),
ET_CR_hydroET = ET_CR_Ma(Ta = Tavg, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa)) %>%
summary()
devtools::load_all(".")
fread('H:/data for cal_PET/SITES_CFSV2/59287.csv') %>%
mutate(VPD = cal_VPD(Ta = Tavg, Pa = Pa, q = q),
ET_CR_hydroET = ET_CR_Ma(Ta = Tavg, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa)) %>%
summary()
??separate
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
?enquo
?map_dfr
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
usethis::use_package('purrr')
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
?separate
??separate
usethis::use_package('tidyr')
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
devtools::load_all(".")
devtools::document()
devtools::check()
devtools::document()
devtools::load_all(".")
devtools::check()
devtools::document()
devtools::check()
array(1:24, dim = c(3, 4, 2))
array(1:24, dim = c(3, 4, 2)) %>% dim()
devtools::load_all(".")
array(1:24, dim = c(3, 4, 2)) %>% dim()
(array(1:24, dim = c(3, 4, 2)) %>% dim())[3]
array(1:24, dim = c(3, 4, 2)) %>% dim() %>% len()
array(1:24, dim = c(3, 4, 2)) %>% dim() %>% length()
all.equal(c(1, 3), c(1, 3))
all.equal(c(1, 3), c(1, 2))
all.equal(c(1, 3), c(1, 1))
isTRUE(all.equal(c(1, 2), c(1, 2)))
isTRUE(all.equal(c(1, 2), c(1, 3)))
array(1:24, dim = c(3, 4, 2)) %>% dim() %>% length()
(array(1:24, dim = c(3, 4, 2)) %>% dim())[1:2]
(array(1:24, dim = c(3, 4, 2)) %>% dim())[1:2] %>% length()
stop(1)
paste0
array(1:4, c(1, 2))
array(array(1:4, c(1, 2)), dim = c(1, 2, 1))
devtools::load_all(".")
bind_array_layer(array(1:2), array(1:2))
array(1:2)
bind_array_layer(array(1:2, 1, 2), array(1:2, 1, 2))
array(1:2, 1, 2)
array(1:2, c(1, 2))
bind_array_layer(array(1:2, c(1, 2)), array(1:2, c(1, 2)))
devtools::load_all(".")
bind_array_layer(array(1:2, c(1, 2)), array(1:2, c(1, 2)))
devtools::load_all(".")
bind_array_layer(array(1:2, c(1, 2)), array(1:2, c(1, 2)))
bind_array_layer(array(1:24, c(3, 4, 2)), array(1:24, c(3, 4, 2)))
devtools::document()
devtools::check()
cal_gma
devtools::load_all(".")
cal_gma
cal_Tws
cal_delta
devtools::load_all(".")
calib_alpha(Ta = 20, Tws = 10, VPD = 0.5)
calib_alpha(Ta = 20, Tws = 10, VPD = -0.02)
devtools::document()
devtools::check()
devtools::load_all(".")
?hydorET
??hydorET
?cal_gma
?exact_separate
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
?exact_separate
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value, .convert = T, .remove = T)
# tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
#        value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
#        tes = 1) %>%
#   exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
tibble(FORMAT = rep('A:B', 10000), value = rep('2:3', 10000)) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
# tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
#        value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
#        tes = 1) %>%
#   exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
tibble(FORMAT = rep('A:B', 10000), value = rep('2:3', 10000)) %>% separate(col = value, into = 'RES')
# tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
#        value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
#        tes = 1) %>%
#   exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
tibble(FORMAT = rep('A:B', 10000), value = rep('2:3', 10000)) %>% separate(col = value, into = c('RES', 'R'))
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
tes = 1)
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
# tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
#        value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
#        tes = 1) %>%
#   exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
tibble(FORMAT = rep('A:B', 10000), value = rep('2:3', 10000)) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
devtools::document()
devtools::check()
devtools::check()
devtools::load_all(".")
# tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
#        value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
#        tes = 1) %>%
#   exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
tibble(FORMAT = rep('A:B', 10000), value = rep('2:3', 10000)) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
devtools::load_all(".")
# tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
#        value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
#        tes = 1) %>%
#   exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
tibble(FORMAT = rep('A:B', 10000), value = rep('2:3', 10000)) %>%
exact_separate(.col_name = FORMAT, .col_value = value)
devtools::load_all(".")
tibble(FORMAT = c('B:C', 'A:B:C', 'B:C:D', 'A:C', 'A:B', 'A:B'),
value = c('2:3', '1:2:3', '2:3:4', '1:3', '1:2', '1:2'),
tes = 1) %>%
exact_separate(.col_name = FORMAT, .col_value = value, .convert = T)
devtools::load_all(".")
cal_Tws(20, NA, 2, 0.5)
VPD2Td(0.5, 20)
VPD2Td(0.5, NA)
VPD2Td(NA, 20)
cal_es(NA)
devtools::load_all(".")
VPD2Td(0.5, 20)
VPD2Td(0.5, NA)
VPD2Td(NA, 20)
VPD2Td(c(0.5, 0.5), c(20, 20))
VPD2Td(c(0.5, 0.5), c(20, NA))
VPD2Td(c(NA, 0.5), c(20, 20))
tibble(A = c(1, NA), B = c(50, 100))
tibble(A = c(1, NA), B = c(50, 100))[1, ]
tibble(A = c(1, NA), B = c(50, 100))[2, ]
tibble(A = c(1, NA), B = c(50, 100))[2, ] %>% is.na()
na_if(NA)
tibble(A = c(1, NA), B = c(50, 100))[2, ] %>% as.numeric()
NA %in% (tibble(A = c(1, NA), B = c(50, 100))[2, ] %>% as.numeric())
NA %in% tibble(A = c(1, NA), B = c(50, 100))[2, ]
devtools::load_all(".")
cal_Twb(0.5, 20)
cal_Twb(0.5, NA)
cal_Twb(c(0.5, NA, 0.5), c(NA, 20, 20))
cal_Tws(20, NA, 2, 0.5)
devtools::load_all(".")
cal_Tws(20, NA, 2, 0.5)
cal_Tws(c(NA, 20), c(50, 50), c(2, 2), c(0.5, 0.5))
devtools::document()
devtools::check()
library(tidyverse)
library(tidyfst)
fread('H:/data for cal_PET/SITES_OBS/processed_50136.csv')
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv')
library(data.table)
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv')
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv') %>%
mutate(VPD = cal_VPD(Ta = Tavg, Pa = Pa, q = q),
ET_CR_hydroET = ET_CR_Ma(Ta = Tavg, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa))
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv') %>%colnames()
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv') %>%
mutate(VPD = cal_VPD(Ta = Tair, Pa = Pa, q = q),
ET_CR_hydroET = ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa)) %>%
summary()
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv') %>%
mutate(
ET_CR_hydroET = ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa)) %>%
summary()
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv') %>%
mutate(
ET_CR_hydroET = ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa)) %>%
summary()
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv') %>%
mutate(
ET_CR_hydroET = ifelse(Rn < 0 | VPD < 0, 0,
ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa))) %>%
summary()
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv')[1:100] %>%
mutate(
ET_CR_hydroET = ifelse(Rn < 0 | VPD < 0, 0,
ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa))) %>%
summary()
ET_CR_Ma(20, 50, 2, 0.5)
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv')[1:1000] %>%
mutate(
ET_CR_hydroET = ifelse(Rn < 0 | VPD < 0, 0,
ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa))) %>%
summary()
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv')[1:10000] %>%
mutate(
ET_CR_hydroET = ifelse(Rn < 0 | VPD < 0, 0,
ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa))) %>%
summary()
devtools::load_all(".")
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv')[1:10000] %>%
mutate(
ET_CR_hydroET = ifelse(Rn < 0 | VPD < 0, 0,
ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa))) %>%
summary()
devtools::load_all(".")
devtools::load_all(".")
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv')[1:10000] %>%
mutate(
ET_CR_hydroET = ifelse(Rn < 0 | VPD < 0, 0,
ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa))) %>%
summary()
devtools::load_all(".")
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv')[1:10000] %>%
mutate(
ET_CR_hydroET = ifelse(Rn < 0 | VPD < 0, 0,
ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa))) %>%
summary()
devtools::document()
devtools::document()
devtools::check()
devtools::load_all(".")
library(tidyverse)
library(data.table)
fread('H:/data for cal_PET/SITES_OBS/process_50136.csv') %>%
mutate(
ET_CR_hydroET = ifelse(Rn < 0 | VPD < 0, 0,
ET_CR_Ma(Ta = Tair, Rn = Rn, U2 = U2, VPD = VPD, Pa = Pa))) %>%
summary()
d <- fread('H:/data for cal_PET/SITES_OBS/process_50136.csv')
d
VPD
VPD
d %>%
mutate(Td = VPD2Td(VPD = VPD, Ta = Tair))
for (i in 1:nrow(d)) {
print(i)
res = VPD2Td(VPD = d[i, ]$VPD, Ta = d[i, ]$Tair)
}
d[2131:2132]
d[2132]
VPD2Td(0.24, -12.2)
VPD2Td(0.24, -12.2)
cal_es(-12.2) # ea
cal_es(-12.2) - 0.24 # ea
d[2312]
？cal_ea
?cal_ea
??cal_ea
cal_es(-12.2) / 100 * 57 # ea
cal_es(-12.2) - cal_es(-12.2) / 100 * 57 # ea = es * RH
(cal_es(7.3) + cal_es(-1.7)) / 200 * 57
cal_es(-12.2) / 100 * 57 # ea = es * RH
d[2312]
d[2312]
d %>%
mutate(VPD = cal_es(Tair) * rh_avg / 100)
d %>%
mutate(VPD = cal_es(Tair) * rh_avg / 100,
ET_CR = ET_CR_Ma(Tair, Rn, U2, VPD, Pa))
VPD2Td(0.24, -12.2)
d[2312]
VPD2Td(0.25, -12.2)
cal_es(-12.2) - 0.25 # ea = es - VPD
cal_es(-12.2) - 0.24 # ea = es - VPD
devtools::load_all(".")
VPD2Td(0.25, -12.2)
devtools::load_all(".")
d <- data.frame(date = seq(as.POSIXct('2022-05-02'),
as.POSIXct('2022-05-05'), by = 'day'),
Q    = seq(10, 40, 10),
P    = c(1, 2, 0, 2))
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P')
devtools::load_all(".")
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P')
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 2)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 3)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 5)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 40)
devtools::load_all(".")
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 1)
devtools::load_all(".")
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 1)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 10)
devtools::load_all(".")
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 10)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 50)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 100, ymax = 50)
source("~/.active-rstudio-document", echo=TRUE)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 50)
devtools::load_all(".")
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 1, ymax = 50)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 50)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 1, ymax = 50)
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 50)
devtools::load_all(".")
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 50)
devtools::load_all(".")
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 50)
devtools::load_all(".")
devtools::load_all(".")
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 50)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?scale_y_continous
??scale_y_continous
?scale_y_continuous
devtools::load_all(".")
devtools::load_all(".")
d <- data.frame(date = seq(as.POSIXct('2022-05-02'),
as.POSIXct('2022-05-05'), by = 'day'),
Q    = seq(10, 40, 10),
P    = c(1, 2, 0, 2))
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 50)
devtools::load_all(".")
devtools::load_all(".")
ggRunoff(d, date = 'date', Q = 'Q', prcp = 'P', times = 10, ymax = 50)
?sec_axis
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
