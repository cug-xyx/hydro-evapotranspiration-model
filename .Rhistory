square_inv(125)
?uniroot
inverse = function (f, lower = -100, upper = 100) {
function (y) uniroot((function (x) f(x) - y),
lower = lower,
upper = upper,
tol = 1e-05)[1]
}
square_inv <- inverse(function(x) x ^3, 0.001, 100)
square_inv(125)
square_inv(126)
square_inv(127)
square_inv(16)
square_inv(64)
square_inv(64)
square_inv(64) %>% class()
library(tidyverse)
square_inv(64) %>% class()
square_inv(64) %>% unlist()
square_inv(64) %>% unlist() %>% class()
square_inv(64) %>% unlist() %>% as.numeric()
rm(square_inv())
rm(square_inv
)
rm(inverse)
cal_Twb <- function(Td,
Ta,
gma = NULL) {
if (is.null(gma)) gma = cal_gma()
es_Td = cal_es(Td)
# 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb = es_Td + gma * Ta
func <- function(Twb) 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb
inv <- inverse(func, 0.0001, 100)
inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric()
}
rm(cal_Twb)
cal_Twb <- function(Td,
Ta,
gma = NULL) {
if (is.null(gma)) gma = cal_gma()
es_Td = cal_es(Td)
# 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb = es_Td + gma * Ta
func <- function(Twb) 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb
inv <- inverse(func, 0.0001, 100)
inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric()
}
cal_Twb(1, 1)
cal_es <- function(Tair) {
# saturation vapour pressure at the air temperature Tair [kPa]
es = 0.6108 * exp((17.27 * Tair) / (Tair + 237.3))
}
cal_gma <- function(Pa = NULL,
lambda = NULL) {
if (is.null(lambda)) lambda = 2.45  # latent heat of vaporization [MJ kg-1]
if (is.null(Pa))     Pa     = 101.3 # a standard atmospheric pressure [kPa]
cp      = 0.001013 # specific heat at constant pressure [MJ kg-1 deg-1]
epsilon = 0.622    # ratio molecular weight of water vapor/dry air
gma = (cp * Pa) / (epsilon * lambda) # psychrometric constant [kPa deg-1]
return(gma)
}
cal_Twb(1, 1)
inverse = function (f,
lower = -100,
upper = 100) {
function (y) uniroot((function (x) f(x) - y),
lower = lower, upper = upper,
tol = 1e-05 # iterative accuracy
)[1]
}
cal_Twb(1, 1)
cal_Twb(1, 2)
cal_Twb(c(1, 1), c(2, 2))
cal_Twb <- function(Td,
Ta,
gma = NULL) {
if (is.null(gma)) gma = cal_gma()
es_Td = cal_es(Td) # es at dew-point temperature [kPa]
# function
# 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb = es_Td + gma * Ta
# solve using the inverse function
func <- function(Twb) 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb
inv <- inverse(func, 0.0001, 100)
tibble(Td, Ta) %>%
mutate(Twb = inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric())
# inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric()
}
cal_Twb(c(1, 1), c(2, 2))
cal_Twb <- function(Td,
Ta,
gma = NULL) {
if (is.null(gma)) gma = cal_gma()
es_Td = cal_es(Td) # es at dew-point temperature [kPa]
# function
# 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb = es_Td + gma * Ta
# solve using the inverse function
func <- function(Twb) 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb
inv <- inverse(func, 0.0001, 100)
tibble(Td, Ta, gma, es_Td) %>%
mutate(Twb = inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric())
# inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric()
}
cal_Twb(c(1, 1), c(2, 2))
cal_Twb <- function(Td,
Ta,
gma = NULL) {
if (is.null(gma)) gma = cal_gma()
es_Td = cal_es(Td) # es at dew-point temperature [kPa]
# function
# 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb = es_Td + gma * Ta
# solve using the inverse function
func <- function(Twb) 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb
inv <- inverse(func, 0.0001, 100)
tibble(TD = Td, TA = Ta, GMA = gma, ESTD = es_Td) %>%
mutate(TWB = inv(ESTD + GMA * TA) %>% unlist() %>% as.numeric())
# inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric()
}
cal_Twb(c(1, 1), c(2, 2))
func <- function(x) x+1
inv <- inverse(func, 0.001, 1000)
inv(1)
inv(2)
inv(3)
inv(c(1, 2))
for (i in c(1, 2)) inv(i)
for (i in c(2, 2)) inv(i)
for (i in c(2, 2)) inv(i) %>% print()
for (i in c(2, 4)) inv(i) %>% print()
tibble(num = c(5, 6))
tibble(num = c(5, 6)) %>%
mutate(res = inv(num))
tibble(num = c(5, 6)) %>%
mutate(res = inv(num) %>% unlink())
sapply(c(5, 6), FUN = inv(x))
sapply(c(5, 6), FUN = inv)
sapply(c(5, 6), FUN = inv) %>% class()
cal_Twb <- function(Td,
Ta,
gma = NULL) {
if (is.null(gma)) gma = cal_gma()
es_Td = cal_es(Td) # es at dew-point temperature [kPa]
# function
# 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb = es_Td + gma * Ta
# solve using the inverse function
func <- function(Twb) 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb
y = es_td + gma * Ta
inv <- inverse(func, 0.0001, 100)
# tibble(TD = Td, TA = Ta, GMA = gma, ESTD = es_Td) %>%
#   mutate(TWB = inv(ESTD + GMA * TA) %>% unlist() %>% as.numeric())
# inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric()
sapply(y, FUN = inv) %>% unlist()
}
cal_Twb(c(1, 1), c(2, 2))
cal_Twb <- function(Td,
Ta,
gma = NULL) {
if (is.null(gma)) gma = cal_gma()
es_Td = cal_es(Td) # es at dew-point temperature [kPa]
# function
# 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb = es_Td + gma * Ta
# solve using the inverse function
func <- function(Twb) 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb
y = es_Td + gma * Ta
inv <- inverse(func, 0.0001, 100)
# tibble(TD = Td, TA = Ta, GMA = gma, ESTD = es_Td) %>%
#   mutate(TWB = inv(ESTD + GMA * TA) %>% unlist() %>% as.numeric())
# inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric()
sapply(y, FUN = inv) %>% unlist()
}
cal_Twb(c(1, 1), c(2, 2))
cal_Twb <- function(Td,
Ta,
gma = NULL) {
if (is.null(gma)) gma = cal_gma()
es_Td = cal_es(Td) # es at dew-point temperature [kPa]
# function
# 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb = es_Td + gma * Ta
# solve using the inverse function
func <- function(Twb) 0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) + gma * Twb
y = es_Td + gma * Ta
inv <- inverse(func, 0.0001, 100)
# tibble(TD = Td, TA = Ta, GMA = gma, ESTD = es_Td) %>%
#   mutate(TWB = inv(ESTD + GMA * TA) %>% unlist() %>% as.numeric())
# inv(es_Td + gma * Ta) %>% unlist() %>% as.numeric()
sapply(y, FUN = inv) %>% unlist() %>% as.numeric()
}
cal_Twb(c(1, 1), c(2, 2))
rm(list = ls())
gc()
devtools::load_all(".")
cal_Twb(1, 2)
cal_Twb(c(1, 1), c(2,3))
devtools::load_all(".")
cal_Twb(c(1, 1), c(2,3))
?hydroTools::cal_slope
hydroTools::cal_slope
hydroTools::cal_U2
1 + NULl
1 + NULl
1 + NULL
?hydroTools::cal_ea
hydroTools::cal_ea
devtools::load_all(".")
cal_ea(20)
cal_ea(20, q = 0.5)
cal_Tws <- function(Rn,
Ep,
Ta,
ea,
gma = NULL,
G = NULL) {
if (is.null(gma)) gma = cal_gma()
if (is.null(G)) {
energy = Rn
} else {
energy = Rn - G
}
beta_p = (energy - Ep) / Ep # bowen ratio of the well-watered patch
# function
# beta_p = gma * (Tws - Ta)/(0.6108 * exp((17.27 * Twb) / (Twb + 237.3)) - ea)
# solve using the inverse function
func <- function(Twb) beta_p * 0.6108 * exp((17.27*Twb)/(Twb+237.3)) - gma*Tws
y = beta_p * ea - gma * Ta
inv <- inverse(func, 0.0001, 100)
sapply(y, FUN = inv)
}
rm(list = ls())
devtools::load_all(".")
cal_Tws(50, 4, 15, 0.7)
devtools::load_all(".")
cal_Tws(50, 4, 15, 0.7)
devtools::load_all(".")
cal_Tws(50, 4, 15, 0.7)
cal_Ep_max
cal_Tdry
cal_Ep_max
cal_Ep
devtools::load_all(".")
cal_Ep
cal_Ew
cal_Tws
cal_Ew
2**2
2^2
2 * 3^3
devtools::load_all(".")
cal_ea
cal_Twb
cal_Tdry
cal_Ep_max
cal_Ep
cal_Tws
cal_Ew
hydroTools::cal_lambda
?uniroot
?hydroTools::cal_lambda
?hydroTools::cal_es
library(hydroTools)
ET0_Penman48
ET0_eq
cal_lambda
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
?cal_Ep_max
warnings()
devtools::check()
devtools::check()
devtools::check()
usethis::use_package('stats', type = 'Imports')
devtools::load_all(".")
devtools::check()
usethis::use_gpl3_license()
devtools::check()
usethis::use_gpl3_license()
devtools::check()
devtools::check()
?cal_ea
devtools::document()
?cal_ea
devtools::document()
devtools::document()
?cal_ea
devtools::check()
devtools::document()
?cal_ET_by_CR_model
devtools::check()
devtools::document()
devtools::check()
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
devtools::load_all(".")
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
devtools::load_all(".")
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
library(data.table)
library(tidyverse)
fread('data/raw/JRA55_SITE_50136.csv')
cal_ET_by_CR_model
fread('data/raw/JRA55_SITE_50136.csv') %>%
cal_ET_by_CR_model(Ta = Tair, q = q, Td = NULL, Rn = Rn, U2 = U2)
fread('data/raw/JRA55_SITE_50136.csv') %>%
cal_ET_by_CR_model(Ta = Tair, q = q, Td = NULL, Rn = Rn, U2 = U2, Pa = Pa)
fread('data/raw/JRA55_SITE_50136.csv') %>%
cal_ET_by_CR_model(Ta = Tair, q = q, Td = NULL, Rn = Rn, U2 = U2, Pa = Pa)
fread('data/raw/JRA55_SITE_50136.csv') %>%
mutaes(res = cal_ET_by_CR_model(Ta = Tair, q = q, Td = NULL, Rn = Rn, U2 = U2, Pa = Pa))
fread('data/raw/JRA55_SITE_50136.csv') %>%
mutate(res = cal_ET_by_CR_model(Ta = Tair, q = q, Td = NULL, Rn = Rn, U2 = U2, Pa = Pa))
d = fread('data/raw/JRA55_SITE_50136.csv')
# cal_ET_by_CR_model(Ta = Tair, q = q, Td = NULL, Rn = Rn, U2 = U2, Pa = Pa)
cal_gma(Pa = d$Pa)
d
d = fread('data/raw/JRA55_SITE_50136.csv')
cal_ET_by_CR_model(Ta = d$Tair, q = d$q, Td = NULL, Rn = d$Rn, U2 = d$U2, Pa = d$Pa,)
devtools::load_all(".")
cal_ET_by_CR_model(Ta = d$Tair, q = d$q, Td = NULL, Rn = d$Rn, U2 = d$U2, Pa = d$Pa,
Ep = d$PET)
devtools::load_all(".")
cal_ET_by_CR_model(Ta = d$Tair, q = d$q, Td = NULL, Rn = d$Rn, U2 = d$U2, Pa = d$Pa,
Ep = d$PET)
Tair
devtools::load_all(".")
cal_ea
cal_es
devtools::load_all(".")
cal_q2Td(d$q)
devtools::load_all(".")
cal_q2Td(d$q)
cal_q2Td(d$q)
d$q
cal_q2Td(0.001)
devtools::load_all(".")
cal_q2Td(0.001)
ea
q
cal_ea(q)
cal_ea(q)
q
cal_ea(0.001)
cal_ea(q = 0.001)
devtools::load_all(".")
devtools::load_all(".")
cal_q2Td(0.001, 99)
devtools::load_all(".")
cal_q2Td(0.001, 99)
devtools::load_all(".")
cal_q2Td(0.001, 99)
cal_q2Td(q = 0.001, Pa = 100)
cal_q2Td(q = 1, Pa = 100)
cal_q2Td(q = 0.1, Pa = 100)
cal_q2Td(q = 0.01, Pa = 100)
cal_q2Td(q = 0.001, Pa = 100)
cal_q2Td(q = 0.0001, Pa = 100)
devtools::load_all(".")
cal_q2Td(q = 0.0001, Pa = 100)
d = fread('data/raw/JRA55_SITE_50136.csv')
d %>% summary()
devtools::load_all(".")
d %>% summary()
cal_q2Td(q = 0.0001, Pa = 100)
1e-15
1e-15 %>% as.numeric()
1e-1
1e-2
1e-5
1e-8
devtools::load_all(".")
cal_q2Td(q = 0.0001, Pa = 100)
devtools::load_all(".")
cal_q2Td(q = 0.0001, Pa = 100)
devtools::load_all(".")
cal_q2Td(q = 0.0001, Pa = 100)
devtools::load_all(".")
cal_q2Td(q = 0.0001, Pa = 100)
devtools::load_all(".")
cal_q2Td(q = 0.0001, Pa = 100)
cal_q2Td(q = 0.00001, Pa = 100)
cal_q2Td(q = 0.001, Pa = 100)
ifelse(c(1, 2) < 1, 1, 2)
ifelse(c(1, 2) < 1, next, 1)
ifelse(c(1, 2, 1, 4, 1, 8) < 1, next, 1)
ifelse(c(1, 2, 1, 4, 1, 8) < 4, next, 4)
ifelse(c(1, 2, 1, 4, 1, 8) < 4, , 4)
ifelse(c(1, 2, 1, 4, 1, 8) < 4, NULL, 4)
ifelse(c(1, 2, 1, 4, 1, 8) < 4, 0, 4)
demo = data.frame(a = c(1, 3, 5))
demo
ifelse(demo$a <3, a, 3)
mutate(demo, a = ifelse(a <3, a, 3))
usethis::use_package('tidyverse', type = 'Imports')
usethis::use_package('dplyr', type = 'Imports')
devtools::load_all(".")
# cal_ET_by_CR_model(Ta = Tair, q = q, Td = NULL, Rn = Rn, U2 = U2, Pa = Pa)
cal_gma(Pa = d$Pa)
cal_q2Td(d=d$q, Pa = d$Pa)
cal_q2Td(q=d$q, Pa = d$Pa)
cal_q2Td(q=d$q, Pa = d$Pa) %>% summary()
devtools::check()
cal_ET_by_CR_model(Ta = d$Tair, q = d$q, Td = NULL, Rn = d$Rn, U2 = d$U2, Pa = d$Pa,
Ep = d$PET)
cal_ET_by_CR_model(Ta = d$Tair, q = d$q, Td = NULL, Rn = d$Rn, U2 = d$U2, Pa = d$Pa,
Ep = d$PET, Td = cal_q2Td(d$q))
cal_q2Td(q=d$q, Pa = d$Pa)
cal_ET_by_CR_model
Td = cal_q2Td(d$q)
cal_ET_by_CR_model(Td = Td, Ta = d$Tair, U2 = d$U2, Rn = d$Rn, Ep = d$PET)
devtools::load_all(".")
cal_ET_by_CR_model(Td = Td, Ta = d$Tair, U2 = d$U2, Rn = d$Rn, Ep = d$PET)
devtools::load_all(".")
cal_ET_by_CR_model(Td = 0, Ta = 20, U2 = 4, Rn = 50, Ep = 4)
devtools::load_all(".")
cal_ET_by_CR_model(Td = 0, Ta = 20, U2 = 4, Rn = 50, Ep = 4)
cal_Tws(Rn = 50, Ep = 4, Ta = 20, ea = cal_ea(Tdew = 0))
cal_Tws(Rn = 50, Ep = 4, Ta = 20, q = 0.001
)
cal_ET_by_CR_model(Td = 0, Ta = 20, U2 = 4, Rn = 50, Ep = 4)
cal_ET_by_CR_model(Td = 0, Ta = 20, U2 = 4, Rn = 50, Ep = 5)
cal_ET_by_CR_model(Td = 0, Ta = 20, U2 = 4, Rn = 50, Ep = 3)
cal_ET_by_CR_model(Td = 0, Ta = 20, U2 = 4, Rn = 50, Ep = 2)
cal_ET_by_CR_model(Td = 0, Ta = 20, U2 = 4, Rn = 50, Ep = 1)
cal_ET_by_CR_model(Td = Td, Ta = d$Tair, U2 = d$U2, Rn = d$Rn, Ep = d$PET)
devtools::load_all(".")
?cal_Tws
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3))
devtools::load_all(".")
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3))
devtools::load_all(".")
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3))
cal_Twb(Td = 0, Ta = 20)
cal_Twb(Td = c(0, 0), Ta = c(20, 20))
devtools::load_all(".")
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3))
devtools::load_all(".")
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3))
y
50*0.0352
cal_Tws(Rn = c(50, 50), Ep = c(1, 1), Ta = c(20, 20), ea = c(0.3, 0.3))
devtools::load_all(".")
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
cal_Tws(Rn = c(50, 50), Ep = c(1, 1), Ta = c(20, 20), ea = c(0.3, 0.3))
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3))
devtools::load_all(".")
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3))
?cal_Twb
cal_Twb(c(10, 10), c(20, 20))
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3), Pa = c(100, 100))
cal_gma(Pa = 100)
cal_gma(Pa = c(100, 100))
devtools::load_all(".")
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3), Pa = c(100, 100))
inv
y
Pa
gma
y
inv(y[1])
?cal_Tws
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
inv(y)
inv(c(y, y))
devtools::load_all(".")
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
devtools::load_all(".")
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
devtools::load_all(".")
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3), Pa = c(100, 100))
devtools::load_all(".")
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3), Pa = c(100, 100))
devtools::load_all(".")
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3), Pa = c(100, 100))
y
y[1]
inv(y[1])
cal_Tws(Rn = 50, Ep = 5, Ta = 20, ea = 0.3)
y
inv(y)
inv(0.155)
cal_Tws(Rn = c(50, 50), Ep = c(5, 5), Ta = c(20, 20), ea = c(0.3, 0.3)
)
y
y[1]
inv(y[1])
?uniroot
tibble(a = c(1, 2, 3))
tibble(a = c(1, 2, 3)) %>%
mutate(res = fcase(a == 1, 10,
a == 2, 20,
a == 3, 30))
library(hydroTools)
install.packages('hydroTools')
install.packages("hydroTools")
devtools::install_github('rpkgs/hydroTools')
library(hydroTools)
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(hydroTools)
install.packages('rlang')
library(hydroTools)
?ET_CR_Xiao2020
??ET_CR_Xiao2020
